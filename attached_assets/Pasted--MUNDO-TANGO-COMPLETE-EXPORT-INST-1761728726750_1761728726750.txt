═══════════════════════════════════════════════════════════════
  MUNDO TANGO - COMPLETE EXPORT INSTRUCTIONS
  Branch: 10-21-2025 | Date: October 28, 2025
═══════════════════════════════════════════════════════════════

📦 HOW TO EXPORT THIS PROJECT TO ANOTHER PLATFORM
═══════════════════════════════════════════════════════════════

OPTION 1: REPLIT DOWNLOAD (EASIEST) ✅
────────────────────────────────────────────────────────────────
1. Click the "⋮" (three dots) menu in Replit sidebar
2. Select "Download as zip"
3. Save the file: mundo-tango-export.zip
4. Extract on your target platform
5. Follow DEPLOYMENT_GUIDE.md inside


OPTION 2: GIT CLONE (RECOMMENDED FOR DEVELOPERS) ✅
────────────────────────────────────────────────────────────────
If you have git access to this repository:

1. From another machine/platform:
   git clone <your-repository-url>
   cd Mundo_Tango_App_emergent
   git checkout 10-21-2025

2. Install and run:
   npm install
   # Create .env file (see DEPLOYMENT_GUIDE.md)
   npm run db:push
   npm run dev


OPTION 3: GIT BUNDLE (FOR OFFLINE TRANSFER) ✅
────────────────────────────────────────────────────────────────
From Replit Shell:

1. Create bundle:
   git bundle create mundo-tango.bundle --all

2. Download the .bundle file from Replit

3. On target platform:
   git clone mundo-tango.bundle mundo-tango
   cd mundo-tango
   npm install


═══════════════════════════════════════════════════════════════
📋 WHAT'S INCLUDED IN THIS EXPORT
═══════════════════════════════════════════════════════════════

✅ Frontend Code (client/)
   - React 18 + TypeScript application
   - 200+ component files
   - Mr Blue AI interface
   - Visual Editor
   - All pages and UI components

✅ Backend Code (server/)
   - Express + TypeScript server
   - 100+ route and service files
   - AI integrations (Claude, GPT-4o, Gemini)
   - Authentication system
   - WebSocket server

✅ Database Schema (shared/schema.ts)
   - PostgreSQL + Drizzle ORM
   - All table definitions
   - Migration scripts

✅ Configuration Files
   - package.json (dependencies)
   - vite.config.ts (build config)
   - drizzle.config.ts (database)
   - tsconfig.json (TypeScript)

✅ Documentation (docs/)
   - Development guides
   - API documentation
   - Architecture docs
   - DEPLOYMENT_GUIDE.md ⭐ START HERE


═══════════════════════════════════════════════════════════════
⚙️  SETUP ON NEW PLATFORM (QUICK START)
═══════════════════════════════════════════════════════════════

1. EXTRACT/CLONE PROJECT
   └─ Use one of the export methods above

2. INSTALL DEPENDENCIES
   npm install

3. CREATE .ENV FILE
   Copy this template:
   ─────────────────────────────────────────────────────
   DATABASE_URL=postgresql://user:pass@localhost:5432/db
   JWT_SECRET=your-random-secret-here
   NODE_ENV=development
   PORT=5000
   
   # Optional AI features
   ANTHROPIC_API_KEY=sk-ant-xxxxx
   OPENAI_API_KEY=sk-xxxxx
   GOOGLE_GENAI_API_KEY=xxxxx
   ─────────────────────────────────────────────────────

4. SETUP DATABASE
   npm run db:push

5. START SERVER
   npm run dev

6. OPEN BROWSER
   http://localhost:5000


═══════════════════════════════════════════════════════════════
🚀 DEPLOYMENT TARGETS
═══════════════════════════════════════════════════════════════

✅ Vercel (Frontend + Serverless)
✅ Railway (Full-stack)
✅ Render (Full-stack)
✅ Heroku (Full-stack)
✅ AWS/GCP/Azure (VPS/Container)
✅ DigitalOcean (VPS)
✅ Any Node.js 18+ hosting


═══════════════════════════════════════════════════════════════
📊 PROJECT STATS
═══════════════════════════════════════════════════════════════

Language:        TypeScript + React
Total Files:     ~500-800 source files
Dependencies:    ~150 npm packages
Database:        PostgreSQL 14+
Node Version:    18+ (LTS recommended)
Package Manager: npm or yarn

Frontend:        Vite + React 18 + Tailwind CSS
Backend:         Express + Socket.io
ORM:             Drizzle
Auth:            JWT + Replit OAuth (replaceable)
AI:              Claude 3.5 + GPT-4o + Gemini 2.5


═══════════════════════════════════════════════════════════════
⚠️  IMPORTANT NOTES
═══════════════════════════════════════════════════════════════

❌ DO NOT COPY node_modules/
   → Reinstall with: npm install

❌ DO NOT COPY .env file
   → Create fresh on new platform

❌ DO NOT COPY dist/ or .cache/
   → Will be regenerated automatically

✅ DO copy all source code files (.ts, .tsx, .js, .jsx)
✅ DO copy all config files (package.json, vite.config.ts, etc.)
✅ DO copy documentation (docs/, *.md files)
✅ DO read DEPLOYMENT_GUIDE.md first!


═══════════════════════════════════════════════════════════════
🆘 TROUBLESHOOTING
═══════════════════════════════════════════════════════════════

Problem: Port 5000 already in use
Solution: Kill the process or change PORT in .env

Problem: Database connection error
Solution: Verify DATABASE_URL and PostgreSQL is running

Problem: TypeScript errors
Solution: npm install && npm run db:generate

Problem: Build fails
Solution: rm -rf node_modules && npm install

📖 Full troubleshooting guide: See DEPLOYMENT_GUIDE.md


═══════════════════════════════════════════════════════════════
📞 NEXT STEPS
═══════════════════════════════════════════════════════════════

1. ⭐ READ: DEPLOYMENT_GUIDE.md (comprehensive setup guide)
2. 📋 REVIEW: EXPORT_MANIFEST.md (complete file list)
3. 📦 EXPORT: Use one of the 3 methods above
4. 🚀 DEPLOY: Follow platform-specific instructions
5. ✅ TEST: Verify all features work


═══════════════════════════════════════════════════════════════
Current Branch: 10-21-2025
Export Date: October 28, 2025
Platform: Originally built on Replit
Ready for: Any Node.js 18+ compatible platform
═══════════════════════════════════════════════════════════════

🎉 Your complete Mundo Tango platform is ready to transfer!

Start with DEPLOYMENT_GUIDE.md for detailed instructions.